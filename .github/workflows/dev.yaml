name: Ec Dev Reusable Workflow

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch to trigger the workflow'
        default: 'dev'
        type: string
      environment:
        description: 'Deployment environment (e.g., dev, prod)'
        default: 'dev'
        type: string
      docker_image:
        description: 'Docker image name'
        default: 'voganti-core-prod'
        type: string
      dockerfile:
        description: 'Dockerfile to use'
        default: 'Dockerfile.dev'
        type: string
      product_name:
        description: 'Product name for DefectDojo'
        default: 'voganti-core-prod'
        type: string
      engagement_name:
        description: 'Engagement name for DefectDojo'
        default: 'voganti-core-prod-trivy'
        type: string
      min_severity:
        description: 'Minimum severity level for DefectDojo'
        default: 'Low'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - uses: actions/checkout@v2

      - name: Extract imageAppVersion from values.yaml
        id: get_version
        run: |
          image_version=$(yq eval '.variables.imageAppVersion' ./deploy/${{ inputs.environment }}/values.yaml)
          echo "Image Version: $image_version"
          echo "IMAGE_VERSION=$image_version" >> $GITHUB_ENV

      - name: Cache Trivy DB
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ runner.os }}-${{ env.IMAGE_VERSION }}
          restore-keys: |
            trivy-db-${{ runner.os }}-

      - name: Build Docker Image (no cache)
        run: |
          docker build --no-cache \
            --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }} \
            --build-arg GITHUB_TOKEN=${{ secrets.MAVEN_REPO_TOKEN }} \
            --build-arg ENC_PASSWORD=${{ secrets.ENC_PASSWORD }} \
            --build-arg GITHUB_USER=${{ secrets.MAVEN_REPO_USER }} \
            -t ${{ secrets.DOCKER_USER }}/${{ inputs.docker_image }}:${{ env.IMAGE_VERSION }} \
            -f ${{ inputs.dockerfile }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_USER }}/${{ inputs.docker_image }}:${{ env.IMAGE_VERSION }}

      - name: Clear Cache
        run: |
          curl -X POST "https://api.pentabd.com/ec-cache-sync-service-dev/ec-cache-sync-service/api/v1/private/cache/clear"
